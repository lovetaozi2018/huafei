<?php

namespace app\api\controller;

use app\common\model\MemberSet;
use app\common\model\Recharge;
use app\common\model\User;
use app\common\model\UserBonus;
use think\App;
use think\Db;

class Users extends Base
{

    protected $model;

   function initialize()
   {
       parent::initialize(); // TODO: Change the autogenerated stub
       $this->model = new User();
   }

    public function info()
    {
        $user = $this->user;
        $model = new User();
        $childIds = $model->getChildren($user['id']);
        $user['child_count'] = count($childIds);

        return json(['code' => 200,'user' => $user]);
    }

    /**
     * 编辑用户(头像、昵称、简介、性别)
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function edit()
    {
        if (!$this->request->isPost()) {
            return json(['code' => 400, 'msg' => '非法请求']);
        }
        $user = new User();
        $data = input();
        $res = $user->userEdit($data);
        if(!$res){
            return json(['code' => 201,'msg' => $user->getError()]);
        }
        return json(['code' => 200,'msg' => '修改成功']);
    }

    /**
     * 添加银行卡
     *
     * @return \think\response\Json
     */
    public function addBank()
    {
        $post = input();
        $model = new User();
        $res = $model->allowField(true)->save($post,['id' => $this->user['id']]);
        return $res ? json(['code' => 200,'msg' => '添加成功']) : json(['code' => 201,'msg' => '添加失败']);
    }

    /**
     * 修改密码
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function modifyPwd()
    {
        $post = input();
        $model = new User();
        $res = $model->modifyPassword($post);
        if(!$res){
            return json(['code' => 201,'msg' => $model->getError()]);
        }
        return json(['code' => 200,'msg' => '修改成功']);

    }

    /**
     * 实名认证
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function identity()
    {
        $post = input();
        $model = new User();
        $res = $model->identity($post);

        return $res ? json(['code' => 200,'msg' => '修改成功'])
            : json(['code' => 201,'msg' => '认证失败']);
    }

    /**
     * 话费充值
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function recharge()
    {
        $data = input();
        $model = new Recharge();
        $res = $model->recharge($data);
        if(!$res){
            return json(['code' => 201,'msg' => $model->getError()]);
        }
        return json(['code' => 200,'msg' => '申请成功']);
    }

    /**
     * 话费订单列表
     *
     */
    public function lists()
    {
        $userId = $this->user['id'];
        $model = new Recharge();
        $data = $model->lists($userId);

        return json(['code' => 200,'data' => $data]);
    }

    /**
     * 团队明细
     *
     * @return \think\response\Json
     */
    public function memberDetails()
    {
        $userId = $this->user['id'];
        $model = new User();
        $data = $model->memberDetails($userId);

        return json(['code' => 200,'data' => $data]);
    }

    /**
     * 团队列表
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function children()
    {
        $model = new User();
        $ids = $model->getChildren($this->user['id']);
        $users = Db::name('user')
            ->where('id','in',$ids)
            ->field('member_id,count(id) as sum')
            ->group('member_id')
            ->select();

        return json(['code' => 200,'data' => $users,'total' => count($ids)]);

    }

    /**
     * 会员列表
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function members()
    {
        $memberId = input('member_id');
        $model = new User();
        $ids = $model->getChildren($this->user['id']);
        $members = Db::name('user')
            ->where('id','in',$ids)
            ->where('member_id',$memberId)
            ->field('id,username,real_name,money,member_id,created_at')
            ->order('id desc')
            ->select();

        return json(['code' => 200,'data' => $members]);
    }

    /**
     * 奖金记录
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function bonus()
    {
        $userId = $this->user['id'];
        $bonus = new UserBonus();
        $lists = $bonus->bonus($userId);

        return json(['code' => 200,'data' => $lists]);
    }



    public function test()
    {$amount = input('amount');
       $model = new MemberSet();
       $memberId = $model->getMemberId($amount);
       tlogs($memberId);

    }


}