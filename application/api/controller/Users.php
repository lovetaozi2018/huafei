<?php

namespace app\api\controller;

use app\common\model\MemberSet;
use app\common\model\Recharge;
use app\common\model\User;
use app\common\model\UserBonus;
use app\common\model\UserChild;
use app\common\model\UserCoupons;
use think\App;
use think\Db;
use think\facade\Env;

class Users extends Base
{

    protected $model;

   function initialize()
   {
       parent::initialize(); // TODO: Change the autogenerated stub
       $this->model = new User();
   }

    public function info()
    {
        $model = new User();
        $user = $model->where('id',$this->user['id'])->find();
        $user['head_img'] = $user['head_img'] ? Env::get('api_path').$user['head_img'] : '';
        $user['wx_img'] = $user['wx_img'] ? Env::get('api_path').$user['wx_img'] : '';
        $user['zfb_img'] = $user['zfb_img'] ? Env::get('api_path').$user['zfb_img'] : '';
        $childIds = $model->getChildren($user['id']);
        $user['child_count'] = $childIds ? count($childIds) :  0;

        return json(['code' => 200,'user' => $user]);
    }

    /**
     * 编辑用户(头像、昵称、简介、性别)
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function edit()
    {
        if (!$this->request->isPost()) {
            return json(['code' => 400, 'msg' => '非法请求']);
        }
        $user = new User();
        $data = input();
        $res = $user->userEdit($data);
        if(!$res){
            return json(['code' => 201,'msg' => $user->getError()]);
        }
        return json(['code' => 200,'msg' => '修改成功']);
    }

    /**
     * 添加银行卡
     *
     * @return \think\response\Json
     */
    public function addBank()
    {
        $post = input();
        $model = new User();
        $res = $model->allowField(true)->save($post,['id' => $this->user['id']]);
        return $res ? json(['code' => 200,'msg' => '添加成功']) : json(['code' => 201,'msg' => '添加失败']);
    }

    /**
     * 修改密码
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function modifyPwd()
    {
        $post = input();
        $model = new User();
        $res = $model->modifyPassword($post);
        if(!$res){
            return json(['code' => 201,'msg' => $model->getError()]);
        }
        return json(['code' => 200,'msg' => '修改成功']);

    }

    /**
     * 实名认证
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function identity()
    {
        $post = input();
        $model = new User();
        $res = $model->identity($post);

        return $res ? json(['code' => 200,'msg' => '修改成功'])
            : json(['code' => 201,'msg' => '认证失败']);
    }


    /**
     * 话费充值
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function recharge()
    {
        $model = new Recharge();
        if($this->request->isPost()){
            $data = input();
            $res = $model->recharge($data);
            if(!$res){
                return json(['code' => 201,'msg' => $model->getError()]);
            }
            return json(['code' => 200,'msg' => '申请成功']);
        }
    }


    /**
     * 团队明细
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function memberDetails()
    {
        $userId = $this->user['id'];
        $model = new User();
        $data = $model->memberDetails($userId);

        return json(['code' => 200,'data' => $data]);
    }

    /**
     * 团队列表
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function children()
    {
        $model = new UserChild();
        $data = $model->myChildren($this->user['id']);

        return json(['code' => 200,'data' => $data['data'],'total' => $data['total']]);

    }

    /**
     * 会员列表
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function members()
    {
        $page = input('page') ? input('page') : 1;
        $pageSize = input('page_size') ? input('page_size') : 10;
        $level = input('level') ? input('level') : 0;
        $where = [];
        $data = input();
        $limit = ($page - 1) * $pageSize;
        $model = new UserChild();
        $ids = $model->getChildIds($this->user['id'],$level);
        if(isset($data['keyword']) && !empty($data['keyword'])){
            $where[] = ['username|real_name|phone', 'like', '%' . $data['keyword'] . '%'];
        }

        $members = Db::name('user')
            ->where('id','in',$ids)
            ->where($where)
            ->field('id,username,phone,real_name,money,member_id,created_at')
            ->limit($limit, $pageSize)
            ->order('id desc')
            ->select();

        foreach ($members as $k=>$m){
            $vip = Db::name('member_set')->where('id',$m['member_id'])->find();
            $members[$k]['level'] = $vip ? $vip['level'] : 0;
        }

        return json(['code' => 200,'data' => $members]);
    }

    /**
     * 奖金记录
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function bonus()
    {
        $userId = $this->user['id'];
        $bonus = new UserBonus();
        $lists = $bonus->bonus($userId);

        return json(['code' => 200,'data' => $lists]);
    }

    /**
     * 上传收款码
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function uploadCode()
    {
        $file = $_FILES;
        $model = new User();
        $res = $model->uploadCode($file,$this->user['id']);
        return $res ? json(['code' => 200,'msg' => '上传成功']) :
            json(['code' => 201,'msg' => $model->getError()]);
    }

    /**
     * 推广赚钱
     *
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function promote()
    {
        $promote = Db::name('system_promote')->find();
        return json(['code' => 200,'data' => $promote]);
    }


    public function test()
    {
        $model = new User();
        $fathers = $model->getFather(6);
        tlogs($fathers);

    }


}